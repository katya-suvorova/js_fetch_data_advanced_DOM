{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","body","document","querySelector","request","endPoint","fetch","then","response","ok","json","Error","getPhones","getPhonesDetails","id","getFirstReceivedDetails","arrPromise","Promise","race","details","div","createElement","h3","list","className","textContent","append","insertAdjacentHTML","name","getAllSuccessfulDetails","all","map","phone","phones","arrPhonesId"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DAEXC,EAAOC,SAASC,cAAc,QAE9BC,EAAU,SAACC,GACRC,OAAAA,MAASN,GAAAA,OAAAA,GAAWK,OAAAA,EAApB,UACJE,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHP,IAAIC,MAAM,YAOnBC,EAAY,WACTR,OAAAA,EAAQ,YAGXS,EAAmB,SAACC,GACjBV,OAAAA,EAAmBU,WAAAA,OAAAA,KAGtBC,EAA0B,SAACC,GACxBC,OAAAA,QAAQC,KAAKF,GACjBT,KAAK,SAAAY,GACEC,IAAAA,EAAMlB,SAASmB,cAAc,OAC7BC,EAAKpB,SAASmB,cAAc,MAC5BE,EAAOrB,SAASmB,cAAc,MAEpCD,EAAII,UAAY,iBAChBF,EAAGG,YAAc,iBACjBL,EAAIM,OAAOH,GACXA,EAAKG,OAAOJ,GAEZC,EAAKI,mBAAmB,YACNR,2BAAAA,OAAAA,EAAQL,GACNK,mCAAAA,OAAAA,EAAQS,KAF5B,kBAKA3B,EAAKyB,OAAON,MAIZS,EAA0B,SAACb,GACxBC,OAAAA,QAAQa,IAAId,GAChBT,KAAK,SAAAY,GACEC,IAAAA,EAAMlB,SAASmB,cAAc,OAC7BC,EAAKpB,SAASmB,cAAc,MAC5BE,EAAOrB,SAASmB,cAAc,MAEpCD,EAAII,UAAY,iBAChBF,EAAGG,YAAc,iBACjBL,EAAIM,OAAOH,GACXA,EAAKG,OAAOJ,GAEZH,EAAQY,IAAI,SAAAC,GACVT,EAAKI,mBAAmB,YACNK,6BAAAA,OAAAA,EAAMlB,GACJkB,qCAAAA,OAAAA,EAAMJ,KAF1B,sBAMF3B,EAAKyB,OAAON,MAIlBR,IACGL,KAAK,SAAA0B,GACEC,IAAAA,EAAcD,EAAOF,IAAI,SAAAC,GAASnB,OAAAA,EAAiBmB,EAAMlB,MAE/DC,EAAwBmB,GACxBL,EAAwBK","file":"main.3338ff97.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst body = document.querySelector('body');\n\nconst request = (endPoint) => {\n  return fetch(`${BASE_URL}${endPoint}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error('Error');\n      };\n\n      return response.json();\n    });\n};\n\nconst getPhones = () => {\n  return request('/phones');\n};\n\nconst getPhonesDetails = (id) => {\n  return request(`/phones/${id}`);\n};\n\nconst getFirstReceivedDetails = (arrPromise) => {\n  return Promise.race(arrPromise)\n    .then(details => {\n      const div = document.createElement('div');\n      const h3 = document.createElement('h3');\n      const list = document.createElement('ul');\n\n      div.className = 'first-received';\n      h3.textContent = 'First Received';\n      div.append(list);\n      list.append(h3);\n\n      list.insertAdjacentHTML('beforeend', `\n        <li>Phone-id: ${details.id}</li>\n        <li>Phone-name: ${details.name}</li>\n      `);\n\n      body.append(div);\n    });\n};\n\nconst getAllSuccessfulDetails = (arrPromise) => {\n  return Promise.all(arrPromise)\n    .then(details => {\n      const div = document.createElement('div');\n      const h3 = document.createElement('h3');\n      const list = document.createElement('ul');\n\n      div.className = 'all-successful';\n      h3.textContent = 'All Successful';\n      div.append(list);\n      list.append(h3);\n\n      details.map(phone => {\n        list.insertAdjacentHTML('beforeend', `\n          <li>Phone-id: ${phone.id}</li>\n          <li>Phone-name: ${phone.name}</li>\n        `);\n      });\n\n      body.append(div);\n    });\n};\n\ngetPhones()\n  .then(phones => {\n    const arrPhonesId = phones.map(phone => getPhonesDetails(phone.id));\n\n    getFirstReceivedDetails(arrPhonesId);\n    getAllSuccessfulDetails(arrPhonesId);\n  });\n"]}